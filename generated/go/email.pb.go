// Code generated by protoc-gen-go. DO NOT EDIT.
// source: email.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HistoryTypes int32

const (
	HistoryTypes_LABEL_ADDED     HistoryTypes = 0
	HistoryTypes_LABEL_REMOVED   HistoryTypes = 1
	HistoryTypes_MESSAGE_ADDED   HistoryTypes = 2
	HistoryTypes_MESSAGE_DELETED HistoryTypes = 3
)

var HistoryTypes_name = map[int32]string{
	0: "LABEL_ADDED",
	1: "LABEL_REMOVED",
	2: "MESSAGE_ADDED",
	3: "MESSAGE_DELETED",
}

var HistoryTypes_value = map[string]int32{
	"LABEL_ADDED":     0,
	"LABEL_REMOVED":   1,
	"MESSAGE_ADDED":   2,
	"MESSAGE_DELETED": 3,
}

func (x HistoryTypes) String() string {
	return proto.EnumName(HistoryTypes_name, int32(x))
}

func (HistoryTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{0}
}

type Sender struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EmailAddress         string   `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	DisplayName          string   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sender) Reset()         { *m = Sender{} }
func (m *Sender) String() string { return proto.CompactTextString(m) }
func (*Sender) ProtoMessage()    {}
func (*Sender) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{0}
}

func (m *Sender) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sender.Unmarshal(m, b)
}
func (m *Sender) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sender.Marshal(b, m, deterministic)
}
func (m *Sender) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sender.Merge(m, src)
}
func (m *Sender) XXX_Size() int {
	return xxx_messageInfo_Sender.Size(m)
}
func (m *Sender) XXX_DiscardUnknown() {
	xxx_messageInfo_Sender.DiscardUnknown(m)
}

var xxx_messageInfo_Sender proto.InternalMessageInfo

func (m *Sender) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sender) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Sender) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type Recipient struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EmailAddress         string   `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	DisplayName          string   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Recipient) Reset()         { *m = Recipient{} }
func (m *Recipient) String() string { return proto.CompactTextString(m) }
func (*Recipient) ProtoMessage()    {}
func (*Recipient) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{1}
}

func (m *Recipient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipient.Unmarshal(m, b)
}
func (m *Recipient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipient.Marshal(b, m, deterministic)
}
func (m *Recipient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipient.Merge(m, src)
}
func (m *Recipient) XXX_Size() int {
	return xxx_messageInfo_Recipient.Size(m)
}
func (m *Recipient) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipient.DiscardUnknown(m)
}

var xxx_messageInfo_Recipient proto.InternalMessageInfo

func (m *Recipient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Recipient) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Recipient) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type Draft struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Snipped              string            `protobuf:"bytes,2,opt,name=snipped,proto3" json:"snipped,omitempty"`
	Envelope             *Envelope         `protobuf:"bytes,3,opt,name=envelope,proto3" json:"envelope,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Draft) Reset()         { *m = Draft{} }
func (m *Draft) String() string { return proto.CompactTextString(m) }
func (*Draft) ProtoMessage()    {}
func (*Draft) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{2}
}

func (m *Draft) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Draft.Unmarshal(m, b)
}
func (m *Draft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Draft.Marshal(b, m, deterministic)
}
func (m *Draft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Draft.Merge(m, src)
}
func (m *Draft) XXX_Size() int {
	return xxx_messageInfo_Draft.Size(m)
}
func (m *Draft) XXX_DiscardUnknown() {
	xxx_messageInfo_Draft.DiscardUnknown(m)
}

var xxx_messageInfo_Draft proto.InternalMessageInfo

func (m *Draft) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Draft) GetSnipped() string {
	if m != nil {
		return m.Snipped
	}
	return ""
}

func (m *Draft) GetEnvelope() *Envelope {
	if m != nil {
		return m.Envelope
	}
	return nil
}

func (m *Draft) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Email struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Snipped              string               `protobuf:"bytes,2,opt,name=snipped,proto3" json:"snipped,omitempty"`
	HistoryId            string               `protobuf:"bytes,3,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	Envelope             *Envelope            `protobuf:"bytes,4,opt,name=envelope,proto3" json:"envelope,omitempty"`
	SentAt               *timestamp.Timestamp `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	ReceivedAt           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	SnoozedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=snoozed_at,json=snoozedAt,proto3" json:"snoozed_at,omitempty"`
	Fwd                  bool                 `protobuf:"varint,8,opt,name=fwd,proto3" json:"fwd,omitempty"`
	Labels               map[string]string    `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{3}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Email) GetSnipped() string {
	if m != nil {
		return m.Snipped
	}
	return ""
}

func (m *Email) GetHistoryId() string {
	if m != nil {
		return m.HistoryId
	}
	return ""
}

func (m *Email) GetEnvelope() *Envelope {
	if m != nil {
		return m.Envelope
	}
	return nil
}

func (m *Email) GetSentAt() *timestamp.Timestamp {
	if m != nil {
		return m.SentAt
	}
	return nil
}

func (m *Email) GetReceivedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ReceivedAt
	}
	return nil
}

func (m *Email) GetSnoozedAt() *timestamp.Timestamp {
	if m != nil {
		return m.SnoozedAt
	}
	return nil
}

func (m *Email) GetFwd() bool {
	if m != nil {
		return m.Fwd
	}
	return false
}

func (m *Email) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Thread struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Snipped              string   `protobuf:"bytes,2,opt,name=snipped,proto3" json:"snipped,omitempty"`
	HistoryId            string   `protobuf:"bytes,3,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	Email                []*Email `protobuf:"bytes,4,rep,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Thread) Reset()         { *m = Thread{} }
func (m *Thread) String() string { return proto.CompactTextString(m) }
func (*Thread) ProtoMessage()    {}
func (*Thread) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{4}
}

func (m *Thread) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Thread.Unmarshal(m, b)
}
func (m *Thread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Thread.Marshal(b, m, deterministic)
}
func (m *Thread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Thread.Merge(m, src)
}
func (m *Thread) XXX_Size() int {
	return xxx_messageInfo_Thread.Size(m)
}
func (m *Thread) XXX_DiscardUnknown() {
	xxx_messageInfo_Thread.DiscardUnknown(m)
}

var xxx_messageInfo_Thread proto.InternalMessageInfo

func (m *Thread) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Thread) GetSnipped() string {
	if m != nil {
		return m.Snipped
	}
	return ""
}

func (m *Thread) GetHistoryId() string {
	if m != nil {
		return m.HistoryId
	}
	return ""
}

func (m *Thread) GetEmail() []*Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type Envelope struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From                 *Sender           `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   []*Recipient      `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
	Cc                   []*Recipient      `protobuf:"bytes,4,rep,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  []*Recipient      `protobuf:"bytes,5,rep,name=bcc,proto3" json:"bcc,omitempty"`
	Groups               []*Recipient      `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Message              *Message          `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Attachments          []*Attachment     `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{5}
}

func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (m *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(m, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

func (m *Envelope) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Envelope) GetFrom() *Sender {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Envelope) GetTo() []*Recipient {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Envelope) GetCc() []*Recipient {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *Envelope) GetBcc() []*Recipient {
	if m != nil {
		return m.Bcc
	}
	return nil
}

func (m *Envelope) GetGroups() []*Recipient {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Envelope) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Envelope) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Envelope) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

type Message struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject  string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Mimetype string `protobuf:"bytes,3,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Message_Data
	//	*Message_Uri
	Body                 isMessage_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{6}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Message) GetMimetype() string {
	if m != nil {
		return m.Mimetype
	}
	return ""
}

type isMessage_Body interface {
	isMessage_Body()
}

type Message_Data struct {
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

type Message_Uri struct {
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3,oneof"`
}

func (*Message_Data) isMessage_Body() {}

func (*Message_Uri) isMessage_Body() {}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Message) GetData() []byte {
	if x, ok := m.GetBody().(*Message_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Message) GetUri() string {
	if x, ok := m.GetBody().(*Message_Uri); ok {
		return x.Uri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Data)(nil),
		(*Message_Uri)(nil),
	}
}

type Attachment struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Mimetype string `protobuf:"bytes,3,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*Attachment_Data
	//	*Attachment_Uri
	Content              isAttachment_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Attachment) Reset()         { *m = Attachment{} }
func (m *Attachment) String() string { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()    {}
func (*Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{7}
}

func (m *Attachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attachment.Unmarshal(m, b)
}
func (m *Attachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attachment.Marshal(b, m, deterministic)
}
func (m *Attachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachment.Merge(m, src)
}
func (m *Attachment) XXX_Size() int {
	return xxx_messageInfo_Attachment.Size(m)
}
func (m *Attachment) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachment.DiscardUnknown(m)
}

var xxx_messageInfo_Attachment proto.InternalMessageInfo

func (m *Attachment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Attachment) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Attachment) GetMimetype() string {
	if m != nil {
		return m.Mimetype
	}
	return ""
}

type isAttachment_Content interface {
	isAttachment_Content()
}

type Attachment_Data struct {
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

type Attachment_Uri struct {
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3,oneof"`
}

func (*Attachment_Data) isAttachment_Content() {}

func (*Attachment_Uri) isAttachment_Content() {}

func (m *Attachment) GetContent() isAttachment_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Attachment) GetData() []byte {
	if x, ok := m.GetContent().(*Attachment_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Attachment) GetUri() string {
	if x, ok := m.GetContent().(*Attachment_Uri); ok {
		return x.Uri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Attachment) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Attachment_Data)(nil),
		(*Attachment_Uri)(nil),
	}
}

type Label struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{8}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Label) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Label) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type HistoryLabelAdded struct {
	LabelIds             []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	Email                *Email   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryLabelAdded) Reset()         { *m = HistoryLabelAdded{} }
func (m *HistoryLabelAdded) String() string { return proto.CompactTextString(m) }
func (*HistoryLabelAdded) ProtoMessage()    {}
func (*HistoryLabelAdded) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{9}
}

func (m *HistoryLabelAdded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryLabelAdded.Unmarshal(m, b)
}
func (m *HistoryLabelAdded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryLabelAdded.Marshal(b, m, deterministic)
}
func (m *HistoryLabelAdded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryLabelAdded.Merge(m, src)
}
func (m *HistoryLabelAdded) XXX_Size() int {
	return xxx_messageInfo_HistoryLabelAdded.Size(m)
}
func (m *HistoryLabelAdded) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryLabelAdded.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryLabelAdded proto.InternalMessageInfo

func (m *HistoryLabelAdded) GetLabelIds() []string {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

func (m *HistoryLabelAdded) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type HistoryLabelRemoved struct {
	LabelIds             []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	Email                *Email   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryLabelRemoved) Reset()         { *m = HistoryLabelRemoved{} }
func (m *HistoryLabelRemoved) String() string { return proto.CompactTextString(m) }
func (*HistoryLabelRemoved) ProtoMessage()    {}
func (*HistoryLabelRemoved) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{10}
}

func (m *HistoryLabelRemoved) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryLabelRemoved.Unmarshal(m, b)
}
func (m *HistoryLabelRemoved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryLabelRemoved.Marshal(b, m, deterministic)
}
func (m *HistoryLabelRemoved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryLabelRemoved.Merge(m, src)
}
func (m *HistoryLabelRemoved) XXX_Size() int {
	return xxx_messageInfo_HistoryLabelRemoved.Size(m)
}
func (m *HistoryLabelRemoved) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryLabelRemoved.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryLabelRemoved proto.InternalMessageInfo

func (m *HistoryLabelRemoved) GetLabelIds() []string {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

func (m *HistoryLabelRemoved) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type HistoryEmailAdded struct {
	Email                *Email   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryEmailAdded) Reset()         { *m = HistoryEmailAdded{} }
func (m *HistoryEmailAdded) String() string { return proto.CompactTextString(m) }
func (*HistoryEmailAdded) ProtoMessage()    {}
func (*HistoryEmailAdded) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{11}
}

func (m *HistoryEmailAdded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryEmailAdded.Unmarshal(m, b)
}
func (m *HistoryEmailAdded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryEmailAdded.Marshal(b, m, deterministic)
}
func (m *HistoryEmailAdded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryEmailAdded.Merge(m, src)
}
func (m *HistoryEmailAdded) XXX_Size() int {
	return xxx_messageInfo_HistoryEmailAdded.Size(m)
}
func (m *HistoryEmailAdded) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryEmailAdded.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryEmailAdded proto.InternalMessageInfo

func (m *HistoryEmailAdded) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type HistoryEmailDeleted struct {
	Email                *Email   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryEmailDeleted) Reset()         { *m = HistoryEmailDeleted{} }
func (m *HistoryEmailDeleted) String() string { return proto.CompactTextString(m) }
func (*HistoryEmailDeleted) ProtoMessage()    {}
func (*HistoryEmailDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{12}
}

func (m *HistoryEmailDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryEmailDeleted.Unmarshal(m, b)
}
func (m *HistoryEmailDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryEmailDeleted.Marshal(b, m, deterministic)
}
func (m *HistoryEmailDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryEmailDeleted.Merge(m, src)
}
func (m *HistoryEmailDeleted) XXX_Size() int {
	return xxx_messageInfo_HistoryEmailDeleted.Size(m)
}
func (m *HistoryEmailDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryEmailDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryEmailDeleted proto.InternalMessageInfo

func (m *HistoryEmailDeleted) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type History struct {
	Id                   uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Emails               []*Email               `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty"`
	LabelAdded           []*HistoryLabelAdded   `protobuf:"bytes,3,rep,name=label_added,json=labelAdded,proto3" json:"label_added,omitempty"`
	LabelRemoved         []*HistoryLabelRemoved `protobuf:"bytes,4,rep,name=label_removed,json=labelRemoved,proto3" json:"label_removed,omitempty"`
	EmailAdded           []*HistoryEmailAdded   `protobuf:"bytes,5,rep,name=email_added,json=emailAdded,proto3" json:"email_added,omitempty"`
	EmailDeleted         []*HistoryEmailDeleted `protobuf:"bytes,6,rep,name=email_deleted,json=emailDeleted,proto3" json:"email_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *History) Reset()         { *m = History{} }
func (m *History) String() string { return proto.CompactTextString(m) }
func (*History) ProtoMessage()    {}
func (*History) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{13}
}

func (m *History) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_History.Unmarshal(m, b)
}
func (m *History) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_History.Marshal(b, m, deterministic)
}
func (m *History) XXX_Merge(src proto.Message) {
	xxx_messageInfo_History.Merge(m, src)
}
func (m *History) XXX_Size() int {
	return xxx_messageInfo_History.Size(m)
}
func (m *History) XXX_DiscardUnknown() {
	xxx_messageInfo_History.DiscardUnknown(m)
}

var xxx_messageInfo_History proto.InternalMessageInfo

func (m *History) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *History) GetEmails() []*Email {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *History) GetLabelAdded() []*HistoryLabelAdded {
	if m != nil {
		return m.LabelAdded
	}
	return nil
}

func (m *History) GetLabelRemoved() []*HistoryLabelRemoved {
	if m != nil {
		return m.LabelRemoved
	}
	return nil
}

func (m *History) GetEmailAdded() []*HistoryEmailAdded {
	if m != nil {
		return m.EmailAdded
	}
	return nil
}

func (m *History) GetEmailDeleted() []*HistoryEmailDeleted {
	if m != nil {
		return m.EmailDeleted
	}
	return nil
}

type Profile struct {
	EmailAddress         string   `protobuf:"bytes,1,opt,name=emailAddress,proto3" json:"emailAddress,omitempty"`
	HistoryId            string   `protobuf:"bytes,2,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	EmailsTotal          int32    `protobuf:"varint,3,opt,name=emails_total,json=emailsTotal,proto3" json:"emails_total,omitempty"`
	ThreadsTotal         int32    `protobuf:"varint,4,opt,name=threads_total,json=threadsTotal,proto3" json:"threads_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{14}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Profile) GetHistoryId() string {
	if m != nil {
		return m.HistoryId
	}
	return ""
}

func (m *Profile) GetEmailsTotal() int32 {
	if m != nil {
		return m.EmailsTotal
	}
	return 0
}

func (m *Profile) GetThreadsTotal() int32 {
	if m != nil {
		return m.ThreadsTotal
	}
	return 0
}

type GetDraftRequest struct {
	DraftId              string   `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDraftRequest) Reset()         { *m = GetDraftRequest{} }
func (m *GetDraftRequest) String() string { return proto.CompactTextString(m) }
func (*GetDraftRequest) ProtoMessage()    {}
func (*GetDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{15}
}

func (m *GetDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDraftRequest.Unmarshal(m, b)
}
func (m *GetDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDraftRequest.Marshal(b, m, deterministic)
}
func (m *GetDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDraftRequest.Merge(m, src)
}
func (m *GetDraftRequest) XXX_Size() int {
	return xxx_messageInfo_GetDraftRequest.Size(m)
}
func (m *GetDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDraftRequest proto.InternalMessageInfo

func (m *GetDraftRequest) GetDraftId() string {
	if m != nil {
		return m.DraftId
	}
	return ""
}

type ListDraftsRequest struct {
	PageToken            string   `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDraftsRequest) Reset()         { *m = ListDraftsRequest{} }
func (m *ListDraftsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDraftsRequest) ProtoMessage()    {}
func (*ListDraftsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{16}
}

func (m *ListDraftsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDraftsRequest.Unmarshal(m, b)
}
func (m *ListDraftsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDraftsRequest.Marshal(b, m, deterministic)
}
func (m *ListDraftsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDraftsRequest.Merge(m, src)
}
func (m *ListDraftsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDraftsRequest.Size(m)
}
func (m *ListDraftsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDraftsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDraftsRequest proto.InternalMessageInfo

func (m *ListDraftsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDraftsRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDraftsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type CreateDraftRequest struct {
	Draft                *Draft   `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDraftRequest) Reset()         { *m = CreateDraftRequest{} }
func (m *CreateDraftRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDraftRequest) ProtoMessage()    {}
func (*CreateDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{17}
}

func (m *CreateDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDraftRequest.Unmarshal(m, b)
}
func (m *CreateDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDraftRequest.Marshal(b, m, deterministic)
}
func (m *CreateDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDraftRequest.Merge(m, src)
}
func (m *CreateDraftRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDraftRequest.Size(m)
}
func (m *CreateDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDraftRequest proto.InternalMessageInfo

func (m *CreateDraftRequest) GetDraft() *Draft {
	if m != nil {
		return m.Draft
	}
	return nil
}

type UpdateDraftRequest struct {
	Draft                *Draft   `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDraftRequest) Reset()         { *m = UpdateDraftRequest{} }
func (m *UpdateDraftRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDraftRequest) ProtoMessage()    {}
func (*UpdateDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{18}
}

func (m *UpdateDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDraftRequest.Unmarshal(m, b)
}
func (m *UpdateDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDraftRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDraftRequest.Merge(m, src)
}
func (m *UpdateDraftRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDraftRequest.Size(m)
}
func (m *UpdateDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDraftRequest proto.InternalMessageInfo

func (m *UpdateDraftRequest) GetDraft() *Draft {
	if m != nil {
		return m.Draft
	}
	return nil
}

type DeleteDraftRequest struct {
	DraftId              string   `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDraftRequest) Reset()         { *m = DeleteDraftRequest{} }
func (m *DeleteDraftRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDraftRequest) ProtoMessage()    {}
func (*DeleteDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{19}
}

func (m *DeleteDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDraftRequest.Unmarshal(m, b)
}
func (m *DeleteDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDraftRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDraftRequest.Merge(m, src)
}
func (m *DeleteDraftRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDraftRequest.Size(m)
}
func (m *DeleteDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDraftRequest proto.InternalMessageInfo

func (m *DeleteDraftRequest) GetDraftId() string {
	if m != nil {
		return m.DraftId
	}
	return ""
}

type SendDraftRequest struct {
	Draft                *Draft   `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendDraftRequest) Reset()         { *m = SendDraftRequest{} }
func (m *SendDraftRequest) String() string { return proto.CompactTextString(m) }
func (*SendDraftRequest) ProtoMessage()    {}
func (*SendDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{20}
}

func (m *SendDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendDraftRequest.Unmarshal(m, b)
}
func (m *SendDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendDraftRequest.Marshal(b, m, deterministic)
}
func (m *SendDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendDraftRequest.Merge(m, src)
}
func (m *SendDraftRequest) XXX_Size() int {
	return xxx_messageInfo_SendDraftRequest.Size(m)
}
func (m *SendDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendDraftRequest proto.InternalMessageInfo

func (m *SendDraftRequest) GetDraft() *Draft {
	if m != nil {
		return m.Draft
	}
	return nil
}

type ListDraftsResponse struct {
	Draft                []*Draft `protobuf:"bytes,1,rep,name=draft,proto3" json:"draft,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize            uint32   `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDraftsResponse) Reset()         { *m = ListDraftsResponse{} }
func (m *ListDraftsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDraftsResponse) ProtoMessage()    {}
func (*ListDraftsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{21}
}

func (m *ListDraftsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDraftsResponse.Unmarshal(m, b)
}
func (m *ListDraftsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDraftsResponse.Marshal(b, m, deterministic)
}
func (m *ListDraftsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDraftsResponse.Merge(m, src)
}
func (m *ListDraftsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDraftsResponse.Size(m)
}
func (m *ListDraftsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDraftsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDraftsResponse proto.InternalMessageInfo

func (m *ListDraftsResponse) GetDraft() []*Draft {
	if m != nil {
		return m.Draft
	}
	return nil
}

func (m *ListDraftsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListDraftsResponse) GetTotalSize() uint32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

type GetEmailRequest struct {
	EmailId              string   `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEmailRequest) Reset()         { *m = GetEmailRequest{} }
func (m *GetEmailRequest) String() string { return proto.CompactTextString(m) }
func (*GetEmailRequest) ProtoMessage()    {}
func (*GetEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{22}
}

func (m *GetEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEmailRequest.Unmarshal(m, b)
}
func (m *GetEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEmailRequest.Marshal(b, m, deterministic)
}
func (m *GetEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEmailRequest.Merge(m, src)
}
func (m *GetEmailRequest) XXX_Size() int {
	return xxx_messageInfo_GetEmailRequest.Size(m)
}
func (m *GetEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEmailRequest proto.InternalMessageInfo

func (m *GetEmailRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

type ListEmailsRequest struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageToken            string            `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             uint32            `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Query                string            `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListEmailsRequest) Reset()         { *m = ListEmailsRequest{} }
func (m *ListEmailsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEmailsRequest) ProtoMessage()    {}
func (*ListEmailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{23}
}

func (m *ListEmailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEmailsRequest.Unmarshal(m, b)
}
func (m *ListEmailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEmailsRequest.Marshal(b, m, deterministic)
}
func (m *ListEmailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEmailsRequest.Merge(m, src)
}
func (m *ListEmailsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEmailsRequest.Size(m)
}
func (m *ListEmailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEmailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEmailsRequest proto.InternalMessageInfo

func (m *ListEmailsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ListEmailsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListEmailsRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListEmailsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type ModifyEmailRequest struct {
	EmailId              string            `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ModifyEmailRequest) Reset()         { *m = ModifyEmailRequest{} }
func (m *ModifyEmailRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyEmailRequest) ProtoMessage()    {}
func (*ModifyEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{24}
}

func (m *ModifyEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyEmailRequest.Unmarshal(m, b)
}
func (m *ModifyEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyEmailRequest.Marshal(b, m, deterministic)
}
func (m *ModifyEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyEmailRequest.Merge(m, src)
}
func (m *ModifyEmailRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyEmailRequest.Size(m)
}
func (m *ModifyEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyEmailRequest proto.InternalMessageInfo

func (m *ModifyEmailRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

func (m *ModifyEmailRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type TrashEmailRequest struct {
	EmailId              string   `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrashEmailRequest) Reset()         { *m = TrashEmailRequest{} }
func (m *TrashEmailRequest) String() string { return proto.CompactTextString(m) }
func (*TrashEmailRequest) ProtoMessage()    {}
func (*TrashEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{25}
}

func (m *TrashEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashEmailRequest.Unmarshal(m, b)
}
func (m *TrashEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashEmailRequest.Marshal(b, m, deterministic)
}
func (m *TrashEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashEmailRequest.Merge(m, src)
}
func (m *TrashEmailRequest) XXX_Size() int {
	return xxx_messageInfo_TrashEmailRequest.Size(m)
}
func (m *TrashEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrashEmailRequest proto.InternalMessageInfo

func (m *TrashEmailRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

type UntrashEmailRequest struct {
	EmailId              string   `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UntrashEmailRequest) Reset()         { *m = UntrashEmailRequest{} }
func (m *UntrashEmailRequest) String() string { return proto.CompactTextString(m) }
func (*UntrashEmailRequest) ProtoMessage()    {}
func (*UntrashEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{26}
}

func (m *UntrashEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UntrashEmailRequest.Unmarshal(m, b)
}
func (m *UntrashEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UntrashEmailRequest.Marshal(b, m, deterministic)
}
func (m *UntrashEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UntrashEmailRequest.Merge(m, src)
}
func (m *UntrashEmailRequest) XXX_Size() int {
	return xxx_messageInfo_UntrashEmailRequest.Size(m)
}
func (m *UntrashEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UntrashEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UntrashEmailRequest proto.InternalMessageInfo

func (m *UntrashEmailRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

type SendEmailRequest struct {
	Email                *Email   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{27}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

func (m *SendEmailRequest) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type ListEmailsResponse struct {
	Email                []*Email `protobuf:"bytes,1,rep,name=email,proto3" json:"email,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize            uint32   `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEmailsResponse) Reset()         { *m = ListEmailsResponse{} }
func (m *ListEmailsResponse) String() string { return proto.CompactTextString(m) }
func (*ListEmailsResponse) ProtoMessage()    {}
func (*ListEmailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{28}
}

func (m *ListEmailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEmailsResponse.Unmarshal(m, b)
}
func (m *ListEmailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEmailsResponse.Marshal(b, m, deterministic)
}
func (m *ListEmailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEmailsResponse.Merge(m, src)
}
func (m *ListEmailsResponse) XXX_Size() int {
	return xxx_messageInfo_ListEmailsResponse.Size(m)
}
func (m *ListEmailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEmailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEmailsResponse proto.InternalMessageInfo

func (m *ListEmailsResponse) GetEmail() []*Email {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *ListEmailsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListEmailsResponse) GetTotalSize() uint32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

type GetThreadRequest struct {
	ThreadId             string   `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetThreadRequest) Reset()         { *m = GetThreadRequest{} }
func (m *GetThreadRequest) String() string { return proto.CompactTextString(m) }
func (*GetThreadRequest) ProtoMessage()    {}
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{29}
}

func (m *GetThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetThreadRequest.Unmarshal(m, b)
}
func (m *GetThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetThreadRequest.Marshal(b, m, deterministic)
}
func (m *GetThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetThreadRequest.Merge(m, src)
}
func (m *GetThreadRequest) XXX_Size() int {
	return xxx_messageInfo_GetThreadRequest.Size(m)
}
func (m *GetThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetThreadRequest proto.InternalMessageInfo

func (m *GetThreadRequest) GetThreadId() string {
	if m != nil {
		return m.ThreadId
	}
	return ""
}

type ListThreadsRequest struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageToken            string            `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             uint32            `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Query                string            `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListThreadsRequest) Reset()         { *m = ListThreadsRequest{} }
func (m *ListThreadsRequest) String() string { return proto.CompactTextString(m) }
func (*ListThreadsRequest) ProtoMessage()    {}
func (*ListThreadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{30}
}

func (m *ListThreadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListThreadsRequest.Unmarshal(m, b)
}
func (m *ListThreadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListThreadsRequest.Marshal(b, m, deterministic)
}
func (m *ListThreadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListThreadsRequest.Merge(m, src)
}
func (m *ListThreadsRequest) XXX_Size() int {
	return xxx_messageInfo_ListThreadsRequest.Size(m)
}
func (m *ListThreadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListThreadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListThreadsRequest proto.InternalMessageInfo

func (m *ListThreadsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ListThreadsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListThreadsRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListThreadsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type ModifyThreadRequest struct {
	ThreadId             string            `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ModifyThreadRequest) Reset()         { *m = ModifyThreadRequest{} }
func (m *ModifyThreadRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyThreadRequest) ProtoMessage()    {}
func (*ModifyThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{31}
}

func (m *ModifyThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyThreadRequest.Unmarshal(m, b)
}
func (m *ModifyThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyThreadRequest.Marshal(b, m, deterministic)
}
func (m *ModifyThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyThreadRequest.Merge(m, src)
}
func (m *ModifyThreadRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyThreadRequest.Size(m)
}
func (m *ModifyThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyThreadRequest proto.InternalMessageInfo

func (m *ModifyThreadRequest) GetThreadId() string {
	if m != nil {
		return m.ThreadId
	}
	return ""
}

func (m *ModifyThreadRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type TrashThreadRequest struct {
	ThreadId             string   `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrashThreadRequest) Reset()         { *m = TrashThreadRequest{} }
func (m *TrashThreadRequest) String() string { return proto.CompactTextString(m) }
func (*TrashThreadRequest) ProtoMessage()    {}
func (*TrashThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{32}
}

func (m *TrashThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashThreadRequest.Unmarshal(m, b)
}
func (m *TrashThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashThreadRequest.Marshal(b, m, deterministic)
}
func (m *TrashThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashThreadRequest.Merge(m, src)
}
func (m *TrashThreadRequest) XXX_Size() int {
	return xxx_messageInfo_TrashThreadRequest.Size(m)
}
func (m *TrashThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrashThreadRequest proto.InternalMessageInfo

func (m *TrashThreadRequest) GetThreadId() string {
	if m != nil {
		return m.ThreadId
	}
	return ""
}

type UntrashThreadRequest struct {
	ThreadId             string   `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UntrashThreadRequest) Reset()         { *m = UntrashThreadRequest{} }
func (m *UntrashThreadRequest) String() string { return proto.CompactTextString(m) }
func (*UntrashThreadRequest) ProtoMessage()    {}
func (*UntrashThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{33}
}

func (m *UntrashThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UntrashThreadRequest.Unmarshal(m, b)
}
func (m *UntrashThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UntrashThreadRequest.Marshal(b, m, deterministic)
}
func (m *UntrashThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UntrashThreadRequest.Merge(m, src)
}
func (m *UntrashThreadRequest) XXX_Size() int {
	return xxx_messageInfo_UntrashThreadRequest.Size(m)
}
func (m *UntrashThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UntrashThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UntrashThreadRequest proto.InternalMessageInfo

func (m *UntrashThreadRequest) GetThreadId() string {
	if m != nil {
		return m.ThreadId
	}
	return ""
}

type SendThreadRequest struct {
	Thread               *Thread  `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendThreadRequest) Reset()         { *m = SendThreadRequest{} }
func (m *SendThreadRequest) String() string { return proto.CompactTextString(m) }
func (*SendThreadRequest) ProtoMessage()    {}
func (*SendThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{34}
}

func (m *SendThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendThreadRequest.Unmarshal(m, b)
}
func (m *SendThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendThreadRequest.Marshal(b, m, deterministic)
}
func (m *SendThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendThreadRequest.Merge(m, src)
}
func (m *SendThreadRequest) XXX_Size() int {
	return xxx_messageInfo_SendThreadRequest.Size(m)
}
func (m *SendThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendThreadRequest proto.InternalMessageInfo

func (m *SendThreadRequest) GetThread() *Thread {
	if m != nil {
		return m.Thread
	}
	return nil
}

type ListThreadsResponse struct {
	Thread               []*Thread `protobuf:"bytes,1,rep,name=thread,proto3" json:"thread,omitempty"`
	NextPageToken        string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize            uint32    `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListThreadsResponse) Reset()         { *m = ListThreadsResponse{} }
func (m *ListThreadsResponse) String() string { return proto.CompactTextString(m) }
func (*ListThreadsResponse) ProtoMessage()    {}
func (*ListThreadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{35}
}

func (m *ListThreadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListThreadsResponse.Unmarshal(m, b)
}
func (m *ListThreadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListThreadsResponse.Marshal(b, m, deterministic)
}
func (m *ListThreadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListThreadsResponse.Merge(m, src)
}
func (m *ListThreadsResponse) XXX_Size() int {
	return xxx_messageInfo_ListThreadsResponse.Size(m)
}
func (m *ListThreadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListThreadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListThreadsResponse proto.InternalMessageInfo

func (m *ListThreadsResponse) GetThread() []*Thread {
	if m != nil {
		return m.Thread
	}
	return nil
}

func (m *ListThreadsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListThreadsResponse) GetTotalSize() uint32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

type StreamStateRequest struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Query                string            `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StreamStateRequest) Reset()         { *m = StreamStateRequest{} }
func (m *StreamStateRequest) String() string { return proto.CompactTextString(m) }
func (*StreamStateRequest) ProtoMessage()    {}
func (*StreamStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{36}
}

func (m *StreamStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamStateRequest.Unmarshal(m, b)
}
func (m *StreamStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamStateRequest.Marshal(b, m, deterministic)
}
func (m *StreamStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamStateRequest.Merge(m, src)
}
func (m *StreamStateRequest) XXX_Size() int {
	return xxx_messageInfo_StreamStateRequest.Size(m)
}
func (m *StreamStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamStateRequest proto.InternalMessageInfo

func (m *StreamStateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StreamStateRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type StreamingStateResponse struct {
	Data                 *any.Any       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status               *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StreamingStateResponse) Reset()         { *m = StreamingStateResponse{} }
func (m *StreamingStateResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingStateResponse) ProtoMessage()    {}
func (*StreamingStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{37}
}

func (m *StreamingStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingStateResponse.Unmarshal(m, b)
}
func (m *StreamingStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingStateResponse.Marshal(b, m, deterministic)
}
func (m *StreamingStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingStateResponse.Merge(m, src)
}
func (m *StreamingStateResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingStateResponse.Size(m)
}
func (m *StreamingStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingStateResponse proto.InternalMessageInfo

func (m *StreamingStateResponse) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StreamingStateResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListHistoryRequest struct {
	HistoryTypes         HistoryTypes `protobuf:"varint,1,opt,name=history_types,json=historyTypes,proto3,enum=service.HistoryTypes" json:"history_types,omitempty"`
	LabelId              string       `protobuf:"bytes,2,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	PageToken            string       `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             uint32       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	StartHistoryId       uint32       `protobuf:"varint,5,opt,name=start_history_id,json=startHistoryId,proto3" json:"start_history_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListHistoryRequest) Reset()         { *m = ListHistoryRequest{} }
func (m *ListHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*ListHistoryRequest) ProtoMessage()    {}
func (*ListHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{38}
}

func (m *ListHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHistoryRequest.Unmarshal(m, b)
}
func (m *ListHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHistoryRequest.Marshal(b, m, deterministic)
}
func (m *ListHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHistoryRequest.Merge(m, src)
}
func (m *ListHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_ListHistoryRequest.Size(m)
}
func (m *ListHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHistoryRequest proto.InternalMessageInfo

func (m *ListHistoryRequest) GetHistoryTypes() HistoryTypes {
	if m != nil {
		return m.HistoryTypes
	}
	return HistoryTypes_LABEL_ADDED
}

func (m *ListHistoryRequest) GetLabelId() string {
	if m != nil {
		return m.LabelId
	}
	return ""
}

func (m *ListHistoryRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListHistoryRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListHistoryRequest) GetStartHistoryId() uint32 {
	if m != nil {
		return m.StartHistoryId
	}
	return 0
}

type ListHistoryResponse struct {
	History              []*History `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	NextPageToken        string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	HistoryId            uint32     `protobuf:"varint,3,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListHistoryResponse) Reset()         { *m = ListHistoryResponse{} }
func (m *ListHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*ListHistoryResponse) ProtoMessage()    {}
func (*ListHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{39}
}

func (m *ListHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHistoryResponse.Unmarshal(m, b)
}
func (m *ListHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHistoryResponse.Marshal(b, m, deterministic)
}
func (m *ListHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHistoryResponse.Merge(m, src)
}
func (m *ListHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_ListHistoryResponse.Size(m)
}
func (m *ListHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListHistoryResponse proto.InternalMessageInfo

func (m *ListHistoryResponse) GetHistory() []*History {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *ListHistoryResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListHistoryResponse) GetHistoryId() uint32 {
	if m != nil {
		return m.HistoryId
	}
	return 0
}

type GetLabelRequest struct {
	LabelId              string   `protobuf:"bytes,1,opt,name=Label_id,json=LabelId,proto3" json:"Label_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLabelRequest) Reset()         { *m = GetLabelRequest{} }
func (m *GetLabelRequest) String() string { return proto.CompactTextString(m) }
func (*GetLabelRequest) ProtoMessage()    {}
func (*GetLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{40}
}

func (m *GetLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLabelRequest.Unmarshal(m, b)
}
func (m *GetLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLabelRequest.Marshal(b, m, deterministic)
}
func (m *GetLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLabelRequest.Merge(m, src)
}
func (m *GetLabelRequest) XXX_Size() int {
	return xxx_messageInfo_GetLabelRequest.Size(m)
}
func (m *GetLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLabelRequest proto.InternalMessageInfo

func (m *GetLabelRequest) GetLabelId() string {
	if m != nil {
		return m.LabelId
	}
	return ""
}

type CreateLabelRequest struct {
	Label                *Label   `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLabelRequest) Reset()         { *m = CreateLabelRequest{} }
func (m *CreateLabelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLabelRequest) ProtoMessage()    {}
func (*CreateLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{41}
}

func (m *CreateLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLabelRequest.Unmarshal(m, b)
}
func (m *CreateLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLabelRequest.Marshal(b, m, deterministic)
}
func (m *CreateLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLabelRequest.Merge(m, src)
}
func (m *CreateLabelRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLabelRequest.Size(m)
}
func (m *CreateLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLabelRequest proto.InternalMessageInfo

func (m *CreateLabelRequest) GetLabel() *Label {
	if m != nil {
		return m.Label
	}
	return nil
}

type UpdateLabelRequest struct {
	Label                *Label   `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLabelRequest) Reset()         { *m = UpdateLabelRequest{} }
func (m *UpdateLabelRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLabelRequest) ProtoMessage()    {}
func (*UpdateLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{42}
}

func (m *UpdateLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLabelRequest.Unmarshal(m, b)
}
func (m *UpdateLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLabelRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLabelRequest.Merge(m, src)
}
func (m *UpdateLabelRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLabelRequest.Size(m)
}
func (m *UpdateLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLabelRequest proto.InternalMessageInfo

func (m *UpdateLabelRequest) GetLabel() *Label {
	if m != nil {
		return m.Label
	}
	return nil
}

type DeleteLabelRequest struct {
	LabelId              string   `protobuf:"bytes,1,opt,name=Label_id,json=LabelId,proto3" json:"Label_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLabelRequest) Reset()         { *m = DeleteLabelRequest{} }
func (m *DeleteLabelRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLabelRequest) ProtoMessage()    {}
func (*DeleteLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{43}
}

func (m *DeleteLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLabelRequest.Unmarshal(m, b)
}
func (m *DeleteLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLabelRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLabelRequest.Merge(m, src)
}
func (m *DeleteLabelRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLabelRequest.Size(m)
}
func (m *DeleteLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLabelRequest proto.InternalMessageInfo

func (m *DeleteLabelRequest) GetLabelId() string {
	if m != nil {
		return m.LabelId
	}
	return ""
}

type SendLabelRequest struct {
	Label                *Label   `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendLabelRequest) Reset()         { *m = SendLabelRequest{} }
func (m *SendLabelRequest) String() string { return proto.CompactTextString(m) }
func (*SendLabelRequest) ProtoMessage()    {}
func (*SendLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{44}
}

func (m *SendLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLabelRequest.Unmarshal(m, b)
}
func (m *SendLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLabelRequest.Marshal(b, m, deterministic)
}
func (m *SendLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLabelRequest.Merge(m, src)
}
func (m *SendLabelRequest) XXX_Size() int {
	return xxx_messageInfo_SendLabelRequest.Size(m)
}
func (m *SendLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLabelRequest proto.InternalMessageInfo

func (m *SendLabelRequest) GetLabel() *Label {
	if m != nil {
		return m.Label
	}
	return nil
}

type GetProfileResponse struct {
	Profile              *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProfileResponse) Reset()         { *m = GetProfileResponse{} }
func (m *GetProfileResponse) String() string { return proto.CompactTextString(m) }
func (*GetProfileResponse) ProtoMessage()    {}
func (*GetProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{45}
}

func (m *GetProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfileResponse.Unmarshal(m, b)
}
func (m *GetProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfileResponse.Marshal(b, m, deterministic)
}
func (m *GetProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfileResponse.Merge(m, src)
}
func (m *GetProfileResponse) XXX_Size() int {
	return xxx_messageInfo_GetProfileResponse.Size(m)
}
func (m *GetProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfileResponse proto.InternalMessageInfo

func (m *GetProfileResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type ListLabelsResponse struct {
	Label                []*Label `protobuf:"bytes,1,rep,name=Label,proto3" json:"Label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLabelsResponse) Reset()         { *m = ListLabelsResponse{} }
func (m *ListLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLabelsResponse) ProtoMessage()    {}
func (*ListLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6175298cb4ed6faa, []int{46}
}

func (m *ListLabelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLabelsResponse.Unmarshal(m, b)
}
func (m *ListLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLabelsResponse.Marshal(b, m, deterministic)
}
func (m *ListLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLabelsResponse.Merge(m, src)
}
func (m *ListLabelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLabelsResponse.Size(m)
}
func (m *ListLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLabelsResponse proto.InternalMessageInfo

func (m *ListLabelsResponse) GetLabel() []*Label {
	if m != nil {
		return m.Label
	}
	return nil
}

func init() {
	proto.RegisterEnum("service.HistoryTypes", HistoryTypes_name, HistoryTypes_value)
	proto.RegisterType((*Sender)(nil), "service.Sender")
	proto.RegisterType((*Recipient)(nil), "service.Recipient")
	proto.RegisterType((*Draft)(nil), "service.Draft")
	proto.RegisterMapType((map[string]string)(nil), "service.Draft.LabelsEntry")
	proto.RegisterType((*Email)(nil), "service.Email")
	proto.RegisterMapType((map[string]string)(nil), "service.Email.LabelsEntry")
	proto.RegisterType((*Thread)(nil), "service.Thread")
	proto.RegisterType((*Envelope)(nil), "service.Envelope")
	proto.RegisterMapType((map[string]string)(nil), "service.Envelope.TagsEntry")
	proto.RegisterType((*Message)(nil), "service.Message")
	proto.RegisterType((*Attachment)(nil), "service.Attachment")
	proto.RegisterType((*Label)(nil), "service.Label")
	proto.RegisterType((*HistoryLabelAdded)(nil), "service.HistoryLabelAdded")
	proto.RegisterType((*HistoryLabelRemoved)(nil), "service.HistoryLabelRemoved")
	proto.RegisterType((*HistoryEmailAdded)(nil), "service.HistoryEmailAdded")
	proto.RegisterType((*HistoryEmailDeleted)(nil), "service.HistoryEmailDeleted")
	proto.RegisterType((*History)(nil), "service.History")
	proto.RegisterType((*Profile)(nil), "service.Profile")
	proto.RegisterType((*GetDraftRequest)(nil), "service.GetDraftRequest")
	proto.RegisterType((*ListDraftsRequest)(nil), "service.ListDraftsRequest")
	proto.RegisterType((*CreateDraftRequest)(nil), "service.CreateDraftRequest")
	proto.RegisterType((*UpdateDraftRequest)(nil), "service.UpdateDraftRequest")
	proto.RegisterType((*DeleteDraftRequest)(nil), "service.DeleteDraftRequest")
	proto.RegisterType((*SendDraftRequest)(nil), "service.SendDraftRequest")
	proto.RegisterType((*ListDraftsResponse)(nil), "service.ListDraftsResponse")
	proto.RegisterType((*GetEmailRequest)(nil), "service.GetEmailRequest")
	proto.RegisterType((*ListEmailsRequest)(nil), "service.ListEmailsRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.ListEmailsRequest.LabelsEntry")
	proto.RegisterType((*ModifyEmailRequest)(nil), "service.ModifyEmailRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.ModifyEmailRequest.LabelsEntry")
	proto.RegisterType((*TrashEmailRequest)(nil), "service.TrashEmailRequest")
	proto.RegisterType((*UntrashEmailRequest)(nil), "service.UntrashEmailRequest")
	proto.RegisterType((*SendEmailRequest)(nil), "service.SendEmailRequest")
	proto.RegisterType((*ListEmailsResponse)(nil), "service.ListEmailsResponse")
	proto.RegisterType((*GetThreadRequest)(nil), "service.GetThreadRequest")
	proto.RegisterType((*ListThreadsRequest)(nil), "service.ListThreadsRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.ListThreadsRequest.LabelsEntry")
	proto.RegisterType((*ModifyThreadRequest)(nil), "service.ModifyThreadRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.ModifyThreadRequest.LabelsEntry")
	proto.RegisterType((*TrashThreadRequest)(nil), "service.TrashThreadRequest")
	proto.RegisterType((*UntrashThreadRequest)(nil), "service.UntrashThreadRequest")
	proto.RegisterType((*SendThreadRequest)(nil), "service.SendThreadRequest")
	proto.RegisterType((*ListThreadsResponse)(nil), "service.ListThreadsResponse")
	proto.RegisterType((*StreamStateRequest)(nil), "service.StreamStateRequest")
	proto.RegisterMapType((map[string]string)(nil), "service.StreamStateRequest.LabelsEntry")
	proto.RegisterType((*StreamingStateResponse)(nil), "service.StreamingStateResponse")
	proto.RegisterType((*ListHistoryRequest)(nil), "service.ListHistoryRequest")
	proto.RegisterType((*ListHistoryResponse)(nil), "service.ListHistoryResponse")
	proto.RegisterType((*GetLabelRequest)(nil), "service.GetLabelRequest")
	proto.RegisterType((*CreateLabelRequest)(nil), "service.CreateLabelRequest")
	proto.RegisterType((*UpdateLabelRequest)(nil), "service.UpdateLabelRequest")
	proto.RegisterType((*DeleteLabelRequest)(nil), "service.DeleteLabelRequest")
	proto.RegisterType((*SendLabelRequest)(nil), "service.SendLabelRequest")
	proto.RegisterType((*GetProfileResponse)(nil), "service.GetProfileResponse")
	proto.RegisterType((*ListLabelsResponse)(nil), "service.ListLabelsResponse")
}

func init() { proto.RegisterFile("email.proto", fileDescriptor_6175298cb4ed6faa) }

var fileDescriptor_6175298cb4ed6faa = []byte{
	// 2028 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x6e, 0x23, 0x49,
	0x15, 0x76, 0xbb, 0xfd, 0x7b, 0xda, 0x4e, 0x9c, 0xca, 0xb0, 0x78, 0x3a, 0x33, 0xda, 0xd9, 0x66,
	0x34, 0x13, 0x45, 0xe0, 0x2c, 0x1e, 0x01, 0xf3, 0x27, 0x66, 0x3d, 0x6b, 0x93, 0x04, 0x25, 0xec,
	0xaa, 0x93, 0x5d, 0x21, 0x6e, 0x4c, 0xc7, 0x5d, 0x49, 0x9a, 0xb5, 0xbb, 0x7b, 0xbb, 0x2b, 0xd9,
	0xf5, 0xdc, 0xed, 0x05, 0x12, 0x88, 0x4b, 0x78, 0x86, 0xb9, 0x41, 0x88, 0x67, 0xe0, 0x01, 0x10,
	0xe2, 0x0d, 0x10, 0x37, 0xdc, 0xf3, 0x04, 0xa8, 0x7e, 0xba, 0xbb, 0xfa, 0xc7, 0x89, 0x33, 0x18,
	0x89, 0xbb, 0xae, 0x53, 0xe7, 0x54, 0x9d, 0x3a, 0xe7, 0x3b, 0xa7, 0xbe, 0x6a, 0xd0, 0xf0, 0xcc,
	0x72, 0xa6, 0x3d, 0x3f, 0xf0, 0x88, 0x87, 0xea, 0x21, 0x0e, 0xae, 0x9c, 0x09, 0xd6, 0xdf, 0x3f,
	0xf7, 0xbc, 0xf3, 0x29, 0xde, 0x65, 0xe2, 0xd3, 0xcb, 0xb3, 0x5d, 0xe2, 0xcc, 0x70, 0x48, 0xac,
	0x99, 0xcf, 0x35, 0xf5, 0xbb, 0x59, 0x05, 0xcb, 0x9d, 0x8b, 0xa9, 0xad, 0xec, 0x14, 0x9e, 0xf9,
	0x24, 0x9a, 0xfc, 0xb6, 0x98, 0x0c, 0xfc, 0xc9, 0x6e, 0x48, 0x2c, 0x72, 0x19, 0xf2, 0x09, 0xe3,
	0x97, 0x50, 0x3b, 0xc6, 0xae, 0x8d, 0x03, 0xb4, 0x06, 0x65, 0xc7, 0xee, 0x2a, 0x0f, 0x94, 0xed,
	0xa6, 0x59, 0x76, 0x6c, 0xf4, 0x1d, 0x68, 0x33, 0x1f, 0xc7, 0x96, 0x6d, 0x07, 0x38, 0x0c, 0xbb,
	0x65, 0x36, 0xd5, 0x62, 0xc2, 0x01, 0x97, 0xa1, 0x0f, 0xa0, 0x65, 0x3b, 0xa1, 0x3f, 0xb5, 0xe6,
	0x63, 0xd7, 0x9a, 0xe1, 0xae, 0xca, 0x74, 0x34, 0x21, 0xfb, 0x99, 0x35, 0xc3, 0xc6, 0x04, 0x9a,
	0x26, 0x9e, 0x38, 0xbe, 0x83, 0x5d, 0xf2, 0x3f, 0xdb, 0xe4, 0x6f, 0x0a, 0x54, 0x87, 0x81, 0x75,
	0x96, 0xdf, 0xa1, 0x0b, 0xf5, 0xd0, 0x75, 0x7c, 0x1f, 0xdb, 0x62, 0xed, 0x68, 0x88, 0xbe, 0x07,
	0x0d, 0xec, 0x5e, 0xe1, 0xa9, 0xe7, 0xf3, 0x25, 0xb5, 0xfe, 0x46, 0x4f, 0x24, 0xa2, 0x37, 0x12,
	0x13, 0x66, 0xac, 0x82, 0xfa, 0x50, 0x9b, 0x5a, 0xa7, 0x78, 0x1a, 0x76, 0x2b, 0x0f, 0xd4, 0x6d,
	0xad, 0xaf, 0xc7, 0xca, 0x6c, 0xe3, 0xde, 0x21, 0x9b, 0x1c, 0xb9, 0x24, 0x98, 0x9b, 0x42, 0x53,
	0x7f, 0x06, 0x9a, 0x24, 0x46, 0x1d, 0x50, 0xbf, 0xc0, 0x73, 0xe1, 0x1c, 0xfd, 0x44, 0x77, 0xa0,
	0x7a, 0x65, 0x4d, 0x2f, 0xb1, 0xf0, 0x8d, 0x0f, 0x9e, 0x97, 0x9f, 0x2a, 0xc6, 0x9f, 0x54, 0xa8,
	0x8e, 0x68, 0x14, 0x6e, 0x71, 0xa2, 0xfb, 0x00, 0x17, 0x4e, 0x48, 0xbc, 0x60, 0x3e, 0x76, 0x6c,
	0x11, 0xa6, 0xa6, 0x90, 0x1c, 0xa4, 0x0f, 0x5c, 0xb9, 0xf9, 0xc0, 0x4f, 0xa0, 0x1e, 0x62, 0x97,
	0x8c, 0x2d, 0xd2, 0xad, 0x32, 0x6d, 0xbd, 0xc7, 0x51, 0xd4, 0x8b, 0x20, 0xd6, 0x3b, 0x89, 0xe0,
	0x69, 0xd6, 0xa8, 0xea, 0x80, 0xa0, 0x17, 0xa0, 0x05, 0x78, 0x82, 0x9d, 0x2b, 0x6c, 0x53, 0xc3,
	0xda, 0x8d, 0x86, 0x10, 0xa9, 0x0f, 0x08, 0x7a, 0x06, 0x10, 0xba, 0x9e, 0xf7, 0x86, 0xdb, 0xd6,
	0x6f, 0xb4, 0x6d, 0x0a, 0xed, 0x01, 0xa1, 0xa1, 0x3d, 0xfb, 0xca, 0xee, 0x36, 0x1e, 0x28, 0xdb,
	0x0d, 0x93, 0x7e, 0x4a, 0xf9, 0x6a, 0x66, 0xf2, 0xc5, 0xc2, 0xba, 0xea, 0x7c, 0x7d, 0x05, 0xb5,
	0x93, 0x8b, 0x00, 0x5b, 0xf6, 0xea, 0xf2, 0xf5, 0x10, 0xaa, 0xac, 0x0e, 0x04, 0xe0, 0xd6, 0xd2,
	0x07, 0x30, 0xf9, 0xa4, 0xf1, 0x56, 0x85, 0x46, 0x94, 0xbd, 0x82, 0xfa, 0xaa, 0x9c, 0x05, 0xde,
	0x8c, 0x6d, 0xac, 0xf5, 0xd7, 0xe3, 0x15, 0x78, 0xcd, 0x9b, 0x6c, 0x12, 0x19, 0x50, 0x26, 0x5e,
	0x57, 0x65, 0x9b, 0xa0, 0x58, 0x25, 0x2e, 0x5a, 0xb3, 0x4c, 0x3c, 0xaa, 0x33, 0x99, 0x08, 0x47,
	0x0a, 0x75, 0x26, 0x13, 0xf4, 0x10, 0xd4, 0xd3, 0xc9, 0xa4, 0x5b, 0x5d, 0xa8, 0x44, 0xa7, 0xd1,
	0x0e, 0xd4, 0xce, 0x03, 0xef, 0xd2, 0x0f, 0xbb, 0xb5, 0x85, 0x8a, 0x42, 0x03, 0xed, 0x42, 0x85,
	0x58, 0xe7, 0x61, 0xb7, 0xce, 0x34, 0xb7, 0x72, 0x68, 0xed, 0x9d, 0x58, 0xe7, 0x22, 0x85, 0x4c,
	0x11, 0xed, 0x40, 0x7d, 0x86, 0xc3, 0xd0, 0x3a, 0xc7, 0x0c, 0x0a, 0x5a, 0xbf, 0x13, 0xdb, 0x1c,
	0x71, 0xb9, 0x19, 0x29, 0xa0, 0x1f, 0x80, 0x66, 0x11, 0x62, 0x4d, 0x2e, 0x66, 0xd8, 0x25, 0x11,
	0x4a, 0x36, 0x63, 0xfd, 0x41, 0x3c, 0x67, 0xca, 0x7a, 0xfa, 0x8f, 0xa0, 0x19, 0xef, 0x7a, 0x2b,
	0x84, 0x7c, 0xa3, 0x40, 0x5d, 0x38, 0x51, 0x88, 0x91, 0xcb, 0xd3, 0x5f, 0xe1, 0x09, 0x89, 0x31,
	0xc2, 0x87, 0x48, 0x87, 0xc6, 0xcc, 0x99, 0x61, 0x32, 0xf7, 0xa3, 0xc6, 0x17, 0x8f, 0xd1, 0x1d,
	0xa8, 0xd8, 0x16, 0xb1, 0x58, 0x31, 0xb7, 0xf6, 0x4b, 0x26, 0x1b, 0x21, 0x04, 0xea, 0x65, 0xe0,
	0xb0, 0x9a, 0x6d, 0xee, 0x97, 0x4c, 0x3a, 0x78, 0x5d, 0x83, 0xca, 0xa9, 0x67, 0xcf, 0x8d, 0xdf,
	0x2a, 0x00, 0xc9, 0xc1, 0x72, 0x6e, 0xe8, 0xd0, 0x38, 0x73, 0xa6, 0x98, 0x75, 0x59, 0xee, 0x47,
	0x3c, 0x5e, 0x91, 0x23, 0x4d, 0xa8, 0x4f, 0x3c, 0x97, 0x60, 0x97, 0x18, 0xaf, 0xa0, 0xca, 0x8a,
	0x2d, 0xe7, 0x05, 0x82, 0x8a, 0xe4, 0x01, 0xfb, 0xa6, 0x32, 0x69, 0x67, 0xf6, 0x6d, 0x7c, 0x0e,
	0x1b, 0xfb, 0xbc, 0x58, 0xd8, 0x3a, 0x03, 0xdb, 0xc6, 0x36, 0xda, 0x82, 0x26, 0x2b, 0xe6, 0xb1,
	0x63, 0x87, 0x5d, 0xe5, 0x81, 0x4a, 0xfd, 0x64, 0x82, 0x03, 0x3b, 0x4c, 0x2a, 0x8a, 0xd7, 0xc3,
	0x82, 0x8a, 0xfa, 0x39, 0x6c, 0xca, 0xeb, 0x9a, 0x78, 0xe6, 0x5d, 0xad, 0x66, 0xe5, 0x67, 0xb1,
	0xc7, 0x23, 0x71, 0xc1, 0x61, 0xa9, 0xcc, 0x95, 0xeb, 0x4c, 0x5f, 0xc4, 0x4e, 0x31, 0xf1, 0x10,
	0x4f, 0x31, 0x59, 0xda, 0xf8, 0x2f, 0x65, 0xa8, 0x0b, 0x6b, 0x29, 0xda, 0x6d, 0x16, 0xed, 0x47,
	0x50, 0x63, 0x4a, 0xf4, 0xee, 0x2d, 0x6a, 0x33, 0x62, 0x96, 0x76, 0x76, 0x7e, 0x7c, 0x8b, 0x7a,
	0x2d, 0xda, 0x45, 0xd2, 0x54, 0x73, 0x99, 0x30, 0x61, 0x9a, 0x64, 0x65, 0x00, 0x6d, 0x6e, 0x1c,
	0xf0, 0x60, 0x8a, 0x4e, 0x72, 0xaf, 0xd0, 0x5c, 0x04, 0xdc, 0x6c, 0x4d, 0xe5, 0xf0, 0xbf, 0x10,
	0x9c, 0x49, 0xec, 0x5f, 0x2d, 0xde, 0x3f, 0x89, 0xab, 0x09, 0x38, 0x89, 0xf1, 0x20, 0xe2, 0x19,
	0x36, 0x8f, 0x9b, 0xe8, 0x3d, 0xf7, 0x0a, 0xcd, 0x45, 0x6c, 0x05, 0x0b, 0x11, 0x23, 0xe3, 0x0f,
	0x0a, 0xd4, 0x3f, 0x0d, 0x3c, 0x5a, 0x0f, 0xc8, 0x80, 0x14, 0x43, 0x11, 0xd8, 0x4d, 0xb3, 0x96,
	0x74, 0x73, 0x2f, 0x67, 0x9b, 0xfb, 0x07, 0x62, 0x89, 0x70, 0x4c, 0x3c, 0x62, 0x4d, 0x19, 0xb0,
	0xab, 0x26, 0x3f, 0x62, 0x78, 0x42, 0x45, 0x94, 0x1c, 0x11, 0x76, 0xa5, 0x44, 0x3a, 0x15, 0xa6,
	0xd3, 0x12, 0x42, 0xa6, 0x64, 0x7c, 0x17, 0xd6, 0xf7, 0x30, 0x61, 0x14, 0xc4, 0xc4, 0x5f, 0x5e,
	0xe2, 0x90, 0xa0, 0xbb, 0xd0, 0xb0, 0xe9, 0x78, 0x1c, 0x57, 0x55, 0x9d, 0x8d, 0x0f, 0x6c, 0x03,
	0xc3, 0xc6, 0xa1, 0x13, 0x72, 0xf5, 0x30, 0xd2, 0xbf, 0x0f, 0xe0, 0x5b, 0xe7, 0x78, 0x4c, 0xbc,
	0x2f, 0xb0, 0x2b, 0x2c, 0x9a, 0x54, 0x72, 0x42, 0x05, 0x14, 0xf7, 0x6c, 0x3a, 0x74, 0xde, 0xf0,
	0x9a, 0x6c, 0x9b, 0x0d, 0x2a, 0x38, 0x76, 0xde, 0xd0, 0xca, 0xaf, 0x7e, 0x79, 0x89, 0x83, 0xb9,
	0x28, 0x4c, 0x3e, 0x30, 0x9e, 0x03, 0xfa, 0x38, 0xc0, 0x16, 0xc1, 0x29, 0xbf, 0x1e, 0x42, 0x95,
	0xf9, 0x91, 0xc3, 0x2a, 0xd7, 0xe2, 0x93, 0xd4, 0xf6, 0x33, 0xdf, 0x7e, 0x37, 0xdb, 0x5d, 0x40,
	0x3c, 0x5d, 0xcb, 0xc6, 0xe3, 0x29, 0x74, 0xe8, 0x55, 0xf8, 0x0e, 0x5b, 0x7d, 0xa3, 0x00, 0x92,
	0x43, 0x19, 0xfa, 0x9e, 0x1b, 0x62, 0xd9, 0x58, 0x5d, 0x68, 0x8c, 0x1e, 0xc1, 0xba, 0x8b, 0xbf,
	0x26, 0x63, 0x29, 0xec, 0x1c, 0x20, 0x6d, 0x2a, 0xfe, 0x34, 0x0e, 0xfd, 0x7d, 0x00, 0x96, 0x79,
	0x1e, 0x7b, 0x95, 0xc5, 0xbe, 0xc9, 0x24, 0x34, 0xf8, 0x22, 0xf7, 0xbc, 0x4c, 0x93, 0xb3, 0x72,
	0xa0, 0x27, 0x67, 0x65, 0xe3, 0x03, 0xdb, 0xf8, 0x87, 0xc2, 0x93, 0xcf, 0xf4, 0xe3, 0xe4, 0xff,
	0x38, 0xa6, 0x49, 0xdc, 0xe3, 0x47, 0xb1, 0xc7, 0x39, 0xdd, 0x22, 0xca, 0x94, 0x01, 0x4f, 0xf9,
	0x5a, 0xf0, 0xa8, 0x8b, 0xc0, 0x53, 0x91, 0xc0, 0xf3, 0xdf, 0x90, 0xb0, 0x3f, 0x2a, 0x80, 0x8e,
	0x3c, 0xdb, 0x39, 0x9b, 0x2f, 0x19, 0x14, 0xf4, 0x2a, 0x3e, 0x3e, 0xef, 0x7e, 0x8f, 0x13, 0xbe,
	0x90, 0x5b, 0x67, 0xd5, 0x94, 0xb1, 0x07, 0x1b, 0x27, 0x81, 0x15, 0x5e, 0x2c, 0x9b, 0xc0, 0x0f,
	0x61, 0xf3, 0x33, 0x97, 0xdc, 0xc6, 0x42, 0xc0, 0x3b, 0xa5, 0xbe, 0xdc, 0x8d, 0x11, 0xc1, 0x3b,
	0x02, 0x40, 0x02, 0xef, 0xc8, 0x78, 0x31, 0x25, 0x5d, 0x15, 0xbc, 0x77, 0xa1, 0xb3, 0x87, 0x09,
	0x67, 0xd5, 0x91, 0xf7, 0x5b, 0xd0, 0xe4, 0xed, 0x2f, 0x39, 0x6d, 0x83, 0x0b, 0x0e, 0x6c, 0xe3,
	0x9f, 0xc2, 0x69, 0x6e, 0x12, 0x43, 0xfc, 0x55, 0x06, 0xe2, 0x8f, 0x53, 0x10, 0x4f, 0x2b, 0xff,
	0xff, 0x63, 0xfc, 0xcf, 0x0a, 0x6c, 0x72, 0x6c, 0x2e, 0x1f, 0x19, 0xf4, 0x51, 0x06, 0xe6, 0xdb,
	0x19, 0x98, 0xa7, 0x96, 0x5a, 0x35, 0xce, 0xbf, 0x0f, 0x88, 0xe1, 0xfc, 0x16, 0x99, 0x7c, 0x02,
	0x77, 0x04, 0xd4, 0x6f, 0x61, 0xf4, 0x12, 0x36, 0x28, 0xda, 0xd3, 0x16, 0x8f, 0xa1, 0xc6, 0x15,
	0x04, 0xde, 0x93, 0x37, 0x90, 0xd0, 0x13, 0xd3, 0xc6, 0xaf, 0x15, 0xd8, 0x4c, 0xe1, 0x41, 0x40,
	0x5e, 0x5e, 0x40, 0xbd, 0x66, 0x81, 0x55, 0xa1, 0xfe, 0xad, 0x02, 0xe8, 0x98, 0x04, 0xd8, 0x9a,
	0x1d, 0x13, 0x8b, 0xe0, 0x9b, 0x41, 0x9c, 0x57, 0x2e, 0x04, 0x71, 0x0c, 0xc4, 0xf2, 0x8a, 0x80,
	0xe8, 0xc2, 0x7b, 0x7c, 0x6b, 0xc7, 0x3d, 0x17, 0xbb, 0x8b, 0x90, 0x6d, 0x8b, 0xe7, 0x00, 0x8f,
	0xf8, 0x9d, 0xdc, 0x0b, 0x7e, 0xe0, 0xce, 0xc5, 0x13, 0x61, 0x07, 0x6a, 0xfc, 0x77, 0x94, 0xe0,
	0xcd, 0x28, 0xd2, 0x0d, 0xfc, 0x49, 0xef, 0x98, 0xcd, 0x98, 0x42, 0xc3, 0xf8, 0xbb, 0xa8, 0x6e,
	0x41, 0xd5, 0xa2, 0xc0, 0x3c, 0x87, 0x76, 0xc4, 0xb3, 0xe8, 0xab, 0x80, 0x93, 0xb1, 0xb5, 0xfe,
	0xb7, 0xb2, 0xd4, 0xee, 0x84, 0x4e, 0x9a, 0xad, 0x0b, 0x69, 0x44, 0x5b, 0x67, 0x44, 0xe9, 0xa3,
	0x77, 0x97, 0x60, 0xf4, 0x99, 0x9a, 0x57, 0xaf, 0xad, 0xf9, 0x4a, 0xa6, 0xe6, 0xb7, 0xa1, 0x13,
	0x12, 0x2b, 0x20, 0x63, 0x89, 0x00, 0x56, 0x99, 0xce, 0x1a, 0x93, 0xef, 0x47, 0x2c, 0xd0, 0xf8,
	0x8d, 0x00, 0x5d, 0x7c, 0x26, 0x11, 0xc1, 0x1d, 0xa8, 0x0b, 0x5b, 0x91, 0xee, 0x4e, 0xf6, 0x38,
	0x66, 0xa4, 0x70, 0x1b, 0xdc, 0x65, 0xfe, 0x36, 0xb4, 0x25, 0x42, 0x2a, 0xc8, 0x84, 0x20, 0xe0,
	0xf1, 0xcd, 0x72, 0x18, 0x85, 0x47, 0xdc, 0x2c, 0x87, 0x3c, 0x3c, 0x09, 0xc3, 0x4b, 0x19, 0x3c,
	0x14, 0x4f, 0xba, 0xdc, 0xdd, 0xc2, 0xb5, 0xf8, 0x64, 0xc2, 0xf0, 0xde, 0xc1, 0x36, 0x66, 0x78,
	0xcb, 0x3a, 0x2a, 0xae, 0xc0, 0x77, 0xd8, 0xea, 0x23, 0x40, 0x7b, 0x98, 0x08, 0xca, 0x2f, 0x67,
	0xc6, 0xe7, 0x22, 0x61, 0x9d, 0x64, 0x26, 0x52, 0x8d, 0x14, 0xe8, 0x41, 0x69, 0x72, 0x79, 0x81,
	0xc9, 0x77, 0x68, 0xb4, 0xbb, 0xba, 0x70, 0xf7, 0x9d, 0x5f, 0x40, 0x4b, 0x06, 0x2e, 0x5a, 0x07,
	0xed, 0x70, 0xf0, 0x7a, 0x74, 0x38, 0x1e, 0x0c, 0x87, 0xa3, 0x61, 0xa7, 0x84, 0x36, 0xa0, 0xcd,
	0x05, 0xe6, 0xe8, 0xe8, 0x93, 0xcf, 0x47, 0xc3, 0x8e, 0x42, 0x45, 0x47, 0xa3, 0xe3, 0xe3, 0xc1,
	0xde, 0x48, 0x68, 0x95, 0xd1, 0x26, 0xac, 0x47, 0xa2, 0xe1, 0xe8, 0x70, 0x74, 0x32, 0x1a, 0x76,
	0xd4, 0xfe, 0xbf, 0x15, 0x58, 0x3b, 0xb2, 0x9c, 0xe9, 0xa9, 0xf7, 0xf5, 0x31, 0xdf, 0x1b, 0x7d,
	0x0c, 0x90, 0x1c, 0x16, 0xbd, 0x97, 0x2b, 0xd9, 0xd1, 0xcc, 0x27, 0x73, 0x3d, 0xf9, 0x03, 0x93,
	0x8f, 0x8c, 0x51, 0x42, 0x3f, 0x05, 0x4d, 0x02, 0x33, 0xda, 0x4a, 0xdd, 0xb3, 0xe9, 0xb2, 0xd5,
	0xef, 0x15, 0x4f, 0xc6, 0x6b, 0x7d, 0x02, 0x9a, 0xd4, 0xd8, 0xa4, 0xb5, 0xf2, 0xed, 0x4e, 0x7f,
	0x3f, 0x33, 0x99, 0x6d, 0x48, 0x46, 0xe9, 0x43, 0xa5, 0xff, 0x3b, 0x15, 0x5a, 0x8c, 0x84, 0x47,
	0x47, 0xfe, 0x21, 0x34, 0xa2, 0x97, 0x13, 0xea, 0xca, 0x07, 0x93, 0x5f, 0x03, 0x7a, 0x86, 0xc1,
	0x1b, 0x25, 0xb4, 0x07, 0x90, 0x10, 0x7f, 0xa4, 0xa7, 0xce, 0x91, 0x7a, 0x58, 0xe9, 0x5b, 0x85,
	0x73, 0xf1, 0x11, 0x5f, 0x82, 0x26, 0xbd, 0x92, 0xa4, 0x23, 0xe6, 0xdf, 0x4e, 0x05, 0x6e, 0xbc,
	0x04, 0x4d, 0x7a, 0x27, 0x49, 0xd6, 0xf9, 0xd7, 0x53, 0x81, 0xf5, 0x10, 0x34, 0xe9, 0xa5, 0x24,
	0x59, 0xe7, 0xdf, 0x4f, 0xfa, 0x02, 0x34, 0x18, 0x25, 0xf4, 0x14, 0x9a, 0xf1, 0xf3, 0x09, 0xdd,
	0x4d, 0xfd, 0x5d, 0x5c, 0xb0, 0x3f, 0xe3, 0x89, 0x46, 0xa9, 0xff, 0x7b, 0x15, 0x5a, 0xec, 0x3b,
	0x9d, 0x0d, 0xfe, 0xc7, 0x3b, 0x95, 0x0d, 0x99, 0xbc, 0xe6, 0x17, 0x8a, 0xb2, 0xc1, 0x79, 0x6a,
	0x26, 0x1b, 0xa9, 0xd7, 0x4b, 0x26, 0x1b, 0x69, 0x62, 0xcb, 0xe3, 0x29, 0x51, 0x7e, 0x29, 0x22,
	0xf9, 0x87, 0x40, 0x81, 0x1b, 0xaf, 0x01, 0x12, 0x2e, 0x2f, 0xb9, 0x91, 0x23, 0xf8, 0xd7, 0x44,
	0xf3, 0x27, 0xd0, 0x92, 0xf9, 0x3d, 0x4a, 0x4a, 0xa4, 0x80, 0xf6, 0xdf, 0x9c, 0x15, 0xbe, 0x48,
	0x3a, 0x2b, 0xd7, 0x9f, 0xa2, 0xff, 0xaf, 0x32, 0xb4, 0x39, 0xab, 0x89, 0xd2, 0xf2, 0x0c, 0x9a,
	0x31, 0x07, 0x97, 0xd6, 0xca, 0xf2, 0x72, 0x3d, 0xcb, 0x8a, 0x92, 0x6e, 0x20, 0xf8, 0x54, 0xa6,
	0x1b, 0xa4, 0x59, 0x77, 0xa6, 0x1b, 0x64, 0x28, 0x98, 0x51, 0x42, 0xaf, 0xa0, 0x25, 0x13, 0x55,
	0x29, 0x34, 0x05, 0xfc, 0xb5, 0xc8, 0x99, 0x21, 0x68, 0x12, 0x07, 0x95, 0x9c, 0xc9, 0x33, 0xd3,
	0x6b, 0x22, 0xbb, 0x0f, 0xed, 0x14, 0x2d, 0x45, 0xf7, 0xb3, 0x29, 0x5a, 0x72, 0xa5, 0xfe, 0x5f,
	0xcb, 0xd0, 0x62, 0x8d, 0x3e, 0x8d, 0x7f, 0xfe, 0x43, 0x34, 0x85, 0x7f, 0xf9, 0xe6, 0xd2, 0x33,
	0x97, 0x85, 0x51, 0xa2, 0x8d, 0x3b, 0xb9, 0x63, 0x96, 0x68, 0xdc, 0xf9, 0x0b, 0x49, 0xee, 0x44,
	0x7c, 0xff, 0x6c, 0x27, 0xba, 0xc1, 0x85, 0xb8, 0x13, 0x65, 0xad, 0xf3, 0xb7, 0x7c, 0x81, 0x75,
	0xdc, 0x89, 0xb2, 0xd6, 0xf9, 0x7b, 0x7e, 0x71, 0x3c, 0x4f, 0x6b, 0x4c, 0xf2, 0xe4, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x3e, 0x6f, 0x2f, 0xf4, 0x58, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MailboxServiceClient is the client API for MailboxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailboxServiceClient interface {
	GetProfile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetProfileResponse, error)
	ListHistory(ctx context.Context, in *ListHistoryRequest, opts ...grpc.CallOption) (*ListHistoryResponse, error)
	StreamState(ctx context.Context, in *StreamStateRequest, opts ...grpc.CallOption) (MailboxService_StreamStateClient, error)
}

type mailboxServiceClient struct {
	cc *grpc.ClientConn
}

func NewMailboxServiceClient(cc *grpc.ClientConn) MailboxServiceClient {
	return &mailboxServiceClient{cc}
}

func (c *mailboxServiceClient) GetProfile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetProfileResponse, error) {
	out := new(GetProfileResponse)
	err := c.cc.Invoke(ctx, "/service.MailboxService/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailboxServiceClient) ListHistory(ctx context.Context, in *ListHistoryRequest, opts ...grpc.CallOption) (*ListHistoryResponse, error) {
	out := new(ListHistoryResponse)
	err := c.cc.Invoke(ctx, "/service.MailboxService/ListHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailboxServiceClient) StreamState(ctx context.Context, in *StreamStateRequest, opts ...grpc.CallOption) (MailboxService_StreamStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MailboxService_serviceDesc.Streams[0], "/service.MailboxService/StreamState", opts...)
	if err != nil {
		return nil, err
	}
	x := &mailboxServiceStreamStateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MailboxService_StreamStateClient interface {
	Recv() (*StreamingStateResponse, error)
	grpc.ClientStream
}

type mailboxServiceStreamStateClient struct {
	grpc.ClientStream
}

func (x *mailboxServiceStreamStateClient) Recv() (*StreamingStateResponse, error) {
	m := new(StreamingStateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MailboxServiceServer is the server API for MailboxService service.
type MailboxServiceServer interface {
	GetProfile(context.Context, *empty.Empty) (*GetProfileResponse, error)
	ListHistory(context.Context, *ListHistoryRequest) (*ListHistoryResponse, error)
	StreamState(*StreamStateRequest, MailboxService_StreamStateServer) error
}

// UnimplementedMailboxServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMailboxServiceServer struct {
}

func (*UnimplementedMailboxServiceServer) GetProfile(ctx context.Context, req *empty.Empty) (*GetProfileResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedMailboxServiceServer) ListHistory(ctx context.Context, req *ListHistoryRequest) (*ListHistoryResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListHistory not implemented")
}
func (*UnimplementedMailboxServiceServer) StreamState(req *StreamStateRequest, srv MailboxService_StreamStateServer) error {
	return status1.Errorf(codes.Unimplemented, "method StreamState not implemented")
}

func RegisterMailboxServiceServer(s *grpc.Server, srv MailboxServiceServer) {
	s.RegisterService(&_MailboxService_serviceDesc, srv)
}

func _MailboxService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailboxServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MailboxService/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailboxServiceServer).GetProfile(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailboxService_ListHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailboxServiceServer).ListHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.MailboxService/ListHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailboxServiceServer).ListHistory(ctx, req.(*ListHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailboxService_StreamState_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamStateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MailboxServiceServer).StreamState(m, &mailboxServiceStreamStateServer{stream})
}

type MailboxService_StreamStateServer interface {
	Send(*StreamingStateResponse) error
	grpc.ServerStream
}

type mailboxServiceStreamStateServer struct {
	grpc.ServerStream
}

func (x *mailboxServiceStreamStateServer) Send(m *StreamingStateResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MailboxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.MailboxService",
	HandlerType: (*MailboxServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfile",
			Handler:    _MailboxService_GetProfile_Handler,
		},
		{
			MethodName: "ListHistory",
			Handler:    _MailboxService_ListHistory_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamState",
			Handler:       _MailboxService_StreamState_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "email.proto",
}

// DraftServiceClient is the client API for DraftService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DraftServiceClient interface {
	GetDraft(ctx context.Context, in *GetDraftRequest, opts ...grpc.CallOption) (*Draft, error)
	ListDrafts(ctx context.Context, in *ListDraftsRequest, opts ...grpc.CallOption) (*ListDraftsResponse, error)
	CreateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*Draft, error)
	UpdateDraft(ctx context.Context, in *UpdateDraftRequest, opts ...grpc.CallOption) (*Draft, error)
	DeleteDraft(ctx context.Context, in *DeleteDraftRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SendDraft(ctx context.Context, in *SendDraftRequest, opts ...grpc.CallOption) (*Email, error)
}

type draftServiceClient struct {
	cc *grpc.ClientConn
}

func NewDraftServiceClient(cc *grpc.ClientConn) DraftServiceClient {
	return &draftServiceClient{cc}
}

func (c *draftServiceClient) GetDraft(ctx context.Context, in *GetDraftRequest, opts ...grpc.CallOption) (*Draft, error) {
	out := new(Draft)
	err := c.cc.Invoke(ctx, "/service.DraftService/GetDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftServiceClient) ListDrafts(ctx context.Context, in *ListDraftsRequest, opts ...grpc.CallOption) (*ListDraftsResponse, error) {
	out := new(ListDraftsResponse)
	err := c.cc.Invoke(ctx, "/service.DraftService/ListDrafts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftServiceClient) CreateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*Draft, error) {
	out := new(Draft)
	err := c.cc.Invoke(ctx, "/service.DraftService/CreateDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftServiceClient) UpdateDraft(ctx context.Context, in *UpdateDraftRequest, opts ...grpc.CallOption) (*Draft, error) {
	out := new(Draft)
	err := c.cc.Invoke(ctx, "/service.DraftService/UpdateDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftServiceClient) DeleteDraft(ctx context.Context, in *DeleteDraftRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.DraftService/DeleteDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftServiceClient) SendDraft(ctx context.Context, in *SendDraftRequest, opts ...grpc.CallOption) (*Email, error) {
	out := new(Email)
	err := c.cc.Invoke(ctx, "/service.DraftService/SendDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DraftServiceServer is the server API for DraftService service.
type DraftServiceServer interface {
	GetDraft(context.Context, *GetDraftRequest) (*Draft, error)
	ListDrafts(context.Context, *ListDraftsRequest) (*ListDraftsResponse, error)
	CreateDraft(context.Context, *CreateDraftRequest) (*Draft, error)
	UpdateDraft(context.Context, *UpdateDraftRequest) (*Draft, error)
	DeleteDraft(context.Context, *DeleteDraftRequest) (*empty.Empty, error)
	SendDraft(context.Context, *SendDraftRequest) (*Email, error)
}

// UnimplementedDraftServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDraftServiceServer struct {
}

func (*UnimplementedDraftServiceServer) GetDraft(ctx context.Context, req *GetDraftRequest) (*Draft, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetDraft not implemented")
}
func (*UnimplementedDraftServiceServer) ListDrafts(ctx context.Context, req *ListDraftsRequest) (*ListDraftsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListDrafts not implemented")
}
func (*UnimplementedDraftServiceServer) CreateDraft(ctx context.Context, req *CreateDraftRequest) (*Draft, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreateDraft not implemented")
}
func (*UnimplementedDraftServiceServer) UpdateDraft(ctx context.Context, req *UpdateDraftRequest) (*Draft, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpdateDraft not implemented")
}
func (*UnimplementedDraftServiceServer) DeleteDraft(ctx context.Context, req *DeleteDraftRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method DeleteDraft not implemented")
}
func (*UnimplementedDraftServiceServer) SendDraft(ctx context.Context, req *SendDraftRequest) (*Email, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SendDraft not implemented")
}

func RegisterDraftServiceServer(s *grpc.Server, srv DraftServiceServer) {
	s.RegisterService(&_DraftService_serviceDesc, srv)
}

func _DraftService_GetDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).GetDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/GetDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).GetDraft(ctx, req.(*GetDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DraftService_ListDrafts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDraftsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).ListDrafts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/ListDrafts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).ListDrafts(ctx, req.(*ListDraftsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DraftService_CreateDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).CreateDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/CreateDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).CreateDraft(ctx, req.(*CreateDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DraftService_UpdateDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).UpdateDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/UpdateDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).UpdateDraft(ctx, req.(*UpdateDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DraftService_DeleteDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).DeleteDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/DeleteDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).DeleteDraft(ctx, req.(*DeleteDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DraftService_SendDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServiceServer).SendDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DraftService/SendDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServiceServer).SendDraft(ctx, req.(*SendDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DraftService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.DraftService",
	HandlerType: (*DraftServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDraft",
			Handler:    _DraftService_GetDraft_Handler,
		},
		{
			MethodName: "ListDrafts",
			Handler:    _DraftService_ListDrafts_Handler,
		},
		{
			MethodName: "CreateDraft",
			Handler:    _DraftService_CreateDraft_Handler,
		},
		{
			MethodName: "UpdateDraft",
			Handler:    _DraftService_UpdateDraft_Handler,
		},
		{
			MethodName: "DeleteDraft",
			Handler:    _DraftService_DeleteDraft_Handler,
		},
		{
			MethodName: "SendDraft",
			Handler:    _DraftService_SendDraft_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

// EmailServiceClient is the client API for EmailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailServiceClient interface {
	GetEmail(ctx context.Context, in *GetEmailRequest, opts ...grpc.CallOption) (*Email, error)
	ListEmails(ctx context.Context, in *ListEmailsRequest, opts ...grpc.CallOption) (*ListEmailsResponse, error)
	ModifyEmail(ctx context.Context, in *ModifyEmailRequest, opts ...grpc.CallOption) (*Email, error)
	TrashEmail(ctx context.Context, in *TrashEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UntrashEmail(ctx context.Context, in *UntrashEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*Email, error)
}

type emailServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailServiceClient(cc *grpc.ClientConn) EmailServiceClient {
	return &emailServiceClient{cc}
}

func (c *emailServiceClient) GetEmail(ctx context.Context, in *GetEmailRequest, opts ...grpc.CallOption) (*Email, error) {
	out := new(Email)
	err := c.cc.Invoke(ctx, "/service.EmailService/GetEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) ListEmails(ctx context.Context, in *ListEmailsRequest, opts ...grpc.CallOption) (*ListEmailsResponse, error) {
	out := new(ListEmailsResponse)
	err := c.cc.Invoke(ctx, "/service.EmailService/ListEmails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) ModifyEmail(ctx context.Context, in *ModifyEmailRequest, opts ...grpc.CallOption) (*Email, error) {
	out := new(Email)
	err := c.cc.Invoke(ctx, "/service.EmailService/ModifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) TrashEmail(ctx context.Context, in *TrashEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.EmailService/TrashEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) UntrashEmail(ctx context.Context, in *UntrashEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.EmailService/UntrashEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*Email, error) {
	out := new(Email)
	err := c.cc.Invoke(ctx, "/service.EmailService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailServiceServer is the server API for EmailService service.
type EmailServiceServer interface {
	GetEmail(context.Context, *GetEmailRequest) (*Email, error)
	ListEmails(context.Context, *ListEmailsRequest) (*ListEmailsResponse, error)
	ModifyEmail(context.Context, *ModifyEmailRequest) (*Email, error)
	TrashEmail(context.Context, *TrashEmailRequest) (*empty.Empty, error)
	UntrashEmail(context.Context, *UntrashEmailRequest) (*empty.Empty, error)
	SendEmail(context.Context, *SendEmailRequest) (*Email, error)
}

// UnimplementedEmailServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmailServiceServer struct {
}

func (*UnimplementedEmailServiceServer) GetEmail(ctx context.Context, req *GetEmailRequest) (*Email, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetEmail not implemented")
}
func (*UnimplementedEmailServiceServer) ListEmails(ctx context.Context, req *ListEmailsRequest) (*ListEmailsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListEmails not implemented")
}
func (*UnimplementedEmailServiceServer) ModifyEmail(ctx context.Context, req *ModifyEmailRequest) (*Email, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ModifyEmail not implemented")
}
func (*UnimplementedEmailServiceServer) TrashEmail(ctx context.Context, req *TrashEmailRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method TrashEmail not implemented")
}
func (*UnimplementedEmailServiceServer) UntrashEmail(ctx context.Context, req *UntrashEmailRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UntrashEmail not implemented")
}
func (*UnimplementedEmailServiceServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*Email, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}

func RegisterEmailServiceServer(s *grpc.Server, srv EmailServiceServer) {
	s.RegisterService(&_EmailService_serviceDesc, srv)
}

func _EmailService_GetEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).GetEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/GetEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).GetEmail(ctx, req.(*GetEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_ListEmails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEmailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).ListEmails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/ListEmails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).ListEmails(ctx, req.(*ListEmailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_ModifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).ModifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/ModifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).ModifyEmail(ctx, req.(*ModifyEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_TrashEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrashEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).TrashEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/TrashEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).TrashEmail(ctx, req.(*TrashEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_UntrashEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UntrashEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).UntrashEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/UntrashEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).UntrashEmail(ctx, req.(*UntrashEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EmailService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.EmailService",
	HandlerType: (*EmailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEmail",
			Handler:    _EmailService_GetEmail_Handler,
		},
		{
			MethodName: "ListEmails",
			Handler:    _EmailService_ListEmails_Handler,
		},
		{
			MethodName: "ModifyEmail",
			Handler:    _EmailService_ModifyEmail_Handler,
		},
		{
			MethodName: "TrashEmail",
			Handler:    _EmailService_TrashEmail_Handler,
		},
		{
			MethodName: "UntrashEmail",
			Handler:    _EmailService_UntrashEmail_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _EmailService_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

// ThreadServiceClient is the client API for ThreadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThreadServiceClient interface {
	GetThread(ctx context.Context, in *GetThreadRequest, opts ...grpc.CallOption) (*Thread, error)
	ListThreads(ctx context.Context, in *ListThreadsRequest, opts ...grpc.CallOption) (*ListThreadsResponse, error)
	ModifyThread(ctx context.Context, in *ModifyThreadRequest, opts ...grpc.CallOption) (*Thread, error)
	TrashThread(ctx context.Context, in *TrashThreadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UntrashThread(ctx context.Context, in *UntrashThreadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type threadServiceClient struct {
	cc *grpc.ClientConn
}

func NewThreadServiceClient(cc *grpc.ClientConn) ThreadServiceClient {
	return &threadServiceClient{cc}
}

func (c *threadServiceClient) GetThread(ctx context.Context, in *GetThreadRequest, opts ...grpc.CallOption) (*Thread, error) {
	out := new(Thread)
	err := c.cc.Invoke(ctx, "/service.ThreadService/GetThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *threadServiceClient) ListThreads(ctx context.Context, in *ListThreadsRequest, opts ...grpc.CallOption) (*ListThreadsResponse, error) {
	out := new(ListThreadsResponse)
	err := c.cc.Invoke(ctx, "/service.ThreadService/ListThreads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *threadServiceClient) ModifyThread(ctx context.Context, in *ModifyThreadRequest, opts ...grpc.CallOption) (*Thread, error) {
	out := new(Thread)
	err := c.cc.Invoke(ctx, "/service.ThreadService/ModifyThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *threadServiceClient) TrashThread(ctx context.Context, in *TrashThreadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.ThreadService/TrashThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *threadServiceClient) UntrashThread(ctx context.Context, in *UntrashThreadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.ThreadService/UntrashThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThreadServiceServer is the server API for ThreadService service.
type ThreadServiceServer interface {
	GetThread(context.Context, *GetThreadRequest) (*Thread, error)
	ListThreads(context.Context, *ListThreadsRequest) (*ListThreadsResponse, error)
	ModifyThread(context.Context, *ModifyThreadRequest) (*Thread, error)
	TrashThread(context.Context, *TrashThreadRequest) (*empty.Empty, error)
	UntrashThread(context.Context, *UntrashThreadRequest) (*empty.Empty, error)
}

// UnimplementedThreadServiceServer can be embedded to have forward compatible implementations.
type UnimplementedThreadServiceServer struct {
}

func (*UnimplementedThreadServiceServer) GetThread(ctx context.Context, req *GetThreadRequest) (*Thread, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetThread not implemented")
}
func (*UnimplementedThreadServiceServer) ListThreads(ctx context.Context, req *ListThreadsRequest) (*ListThreadsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListThreads not implemented")
}
func (*UnimplementedThreadServiceServer) ModifyThread(ctx context.Context, req *ModifyThreadRequest) (*Thread, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ModifyThread not implemented")
}
func (*UnimplementedThreadServiceServer) TrashThread(ctx context.Context, req *TrashThreadRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method TrashThread not implemented")
}
func (*UnimplementedThreadServiceServer) UntrashThread(ctx context.Context, req *UntrashThreadRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UntrashThread not implemented")
}

func RegisterThreadServiceServer(s *grpc.Server, srv ThreadServiceServer) {
	s.RegisterService(&_ThreadService_serviceDesc, srv)
}

func _ThreadService_GetThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThreadServiceServer).GetThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ThreadService/GetThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThreadServiceServer).GetThread(ctx, req.(*GetThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThreadService_ListThreads_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListThreadsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThreadServiceServer).ListThreads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ThreadService/ListThreads",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThreadServiceServer).ListThreads(ctx, req.(*ListThreadsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThreadService_ModifyThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThreadServiceServer).ModifyThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ThreadService/ModifyThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThreadServiceServer).ModifyThread(ctx, req.(*ModifyThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThreadService_TrashThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrashThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThreadServiceServer).TrashThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ThreadService/TrashThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThreadServiceServer).TrashThread(ctx, req.(*TrashThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThreadService_UntrashThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UntrashThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThreadServiceServer).UntrashThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ThreadService/UntrashThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThreadServiceServer).UntrashThread(ctx, req.(*UntrashThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThreadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ThreadService",
	HandlerType: (*ThreadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetThread",
			Handler:    _ThreadService_GetThread_Handler,
		},
		{
			MethodName: "ListThreads",
			Handler:    _ThreadService_ListThreads_Handler,
		},
		{
			MethodName: "ModifyThread",
			Handler:    _ThreadService_ModifyThread_Handler,
		},
		{
			MethodName: "TrashThread",
			Handler:    _ThreadService_TrashThread_Handler,
		},
		{
			MethodName: "UntrashThread",
			Handler:    _ThreadService_UntrashThread_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

// LabelServiceClient is the client API for LabelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LabelServiceClient interface {
	GetLabel(ctx context.Context, in *GetLabelRequest, opts ...grpc.CallOption) (*Label, error)
	ListLabels(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListLabelsResponse, error)
	CreateLabel(ctx context.Context, in *CreateLabelRequest, opts ...grpc.CallOption) (*Label, error)
	UpdateLabel(ctx context.Context, in *UpdateLabelRequest, opts ...grpc.CallOption) (*Label, error)
	DeleteLabel(ctx context.Context, in *DeleteLabelRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type labelServiceClient struct {
	cc *grpc.ClientConn
}

func NewLabelServiceClient(cc *grpc.ClientConn) LabelServiceClient {
	return &labelServiceClient{cc}
}

func (c *labelServiceClient) GetLabel(ctx context.Context, in *GetLabelRequest, opts ...grpc.CallOption) (*Label, error) {
	out := new(Label)
	err := c.cc.Invoke(ctx, "/service.LabelService/GetLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelServiceClient) ListLabels(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListLabelsResponse, error) {
	out := new(ListLabelsResponse)
	err := c.cc.Invoke(ctx, "/service.LabelService/ListLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelServiceClient) CreateLabel(ctx context.Context, in *CreateLabelRequest, opts ...grpc.CallOption) (*Label, error) {
	out := new(Label)
	err := c.cc.Invoke(ctx, "/service.LabelService/CreateLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelServiceClient) UpdateLabel(ctx context.Context, in *UpdateLabelRequest, opts ...grpc.CallOption) (*Label, error) {
	out := new(Label)
	err := c.cc.Invoke(ctx, "/service.LabelService/UpdateLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelServiceClient) DeleteLabel(ctx context.Context, in *DeleteLabelRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.LabelService/DeleteLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LabelServiceServer is the server API for LabelService service.
type LabelServiceServer interface {
	GetLabel(context.Context, *GetLabelRequest) (*Label, error)
	ListLabels(context.Context, *empty.Empty) (*ListLabelsResponse, error)
	CreateLabel(context.Context, *CreateLabelRequest) (*Label, error)
	UpdateLabel(context.Context, *UpdateLabelRequest) (*Label, error)
	DeleteLabel(context.Context, *DeleteLabelRequest) (*empty.Empty, error)
}

// UnimplementedLabelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLabelServiceServer struct {
}

func (*UnimplementedLabelServiceServer) GetLabel(ctx context.Context, req *GetLabelRequest) (*Label, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetLabel not implemented")
}
func (*UnimplementedLabelServiceServer) ListLabels(ctx context.Context, req *empty.Empty) (*ListLabelsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListLabels not implemented")
}
func (*UnimplementedLabelServiceServer) CreateLabel(ctx context.Context, req *CreateLabelRequest) (*Label, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method CreateLabel not implemented")
}
func (*UnimplementedLabelServiceServer) UpdateLabel(ctx context.Context, req *UpdateLabelRequest) (*Label, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpdateLabel not implemented")
}
func (*UnimplementedLabelServiceServer) DeleteLabel(ctx context.Context, req *DeleteLabelRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method DeleteLabel not implemented")
}

func RegisterLabelServiceServer(s *grpc.Server, srv LabelServiceServer) {
	s.RegisterService(&_LabelService_serviceDesc, srv)
}

func _LabelService_GetLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelServiceServer).GetLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LabelService/GetLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelServiceServer).GetLabel(ctx, req.(*GetLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelService_ListLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelServiceServer).ListLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LabelService/ListLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelServiceServer).ListLabels(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelService_CreateLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelServiceServer).CreateLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LabelService/CreateLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelServiceServer).CreateLabel(ctx, req.(*CreateLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelService_UpdateLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelServiceServer).UpdateLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LabelService/UpdateLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelServiceServer).UpdateLabel(ctx, req.(*UpdateLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelService_DeleteLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelServiceServer).DeleteLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LabelService/DeleteLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelServiceServer).DeleteLabel(ctx, req.(*DeleteLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LabelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.LabelService",
	HandlerType: (*LabelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLabel",
			Handler:    _LabelService_GetLabel_Handler,
		},
		{
			MethodName: "ListLabels",
			Handler:    _LabelService_ListLabels_Handler,
		},
		{
			MethodName: "CreateLabel",
			Handler:    _LabelService_CreateLabel_Handler,
		},
		{
			MethodName: "UpdateLabel",
			Handler:    _LabelService_UpdateLabel_Handler,
		},
		{
			MethodName: "DeleteLabel",
			Handler:    _LabelService_DeleteLabel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}
